@model DataAccessLayer.Models.ViewModel.ProjectInfoVM
@using DataAccessLayer.StaticClass
@{
    ViewData["Title"] = "Create Project";
    ViewData["Banner"] = "Create Project";
}

@{
    
    var breadcrumbs = new List<KeyValuePair<string, string>>
    {
        new KeyValuePair<string, string>("","#"),
        new KeyValuePair<string, string>("Project", Url.Action(ActionNameHelper.IndexActionName, ControllerNameHelper.ProjectControllerName) ?? string.Empty),
        new KeyValuePair<string, string>("Create", "#"),
    };
    ViewData["Breadcrumbs"] = breadcrumbs;
}

<div id="response-message">

</div>

<div class="d-flex justify-content-center">
    <form id="form" enctype="multipart/form-data" method="post" class="col-6 shadow-lg p-3 rounded-3">
        <div asp-validation-summary="ModelOnly" class="text-danger">
        </div>

        <div class="form-group mb-2">
            <label class="fw-bold" asp-for="@Model.Name"> </label>
            <input asp-for="@Model.Name" class="form-control" id="name" placeholder="Enter Project Name">
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="form-group mb-2">
            <label class="fw-bold" asp-for="@Model.Key"> </label>
            <input asp-for="@Model.Key" class="form-control" id="key" placeholder="Enter Project Key">
            <span asp-validation-for="Key" class="text-danger"></span>
        </div>

        <div class="form-group mb-2">
            <label class="fw-bold" asp-for="@Model.Description"> </label>
            <input asp-for="@Model.Description" class="form-control" id="description" placeholder="Write Short Description">
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="form-group mb-2">
            <label class="fw-bold" asp-for="@Model.StartDate"> </label>
            <input asp-for="@Model.StartDate" class="form-control" id="startDate" placeholder="Select Start Date">
            <span asp-validation-for="StartDate" class="text-danger"></span>
        </div>
        <div class="form-group mb-2">
            <label class="fw-bold" asp-for="@Model.EndDate"> </label>
            <input asp-for="@Model.EndDate" class="form-control" id="endDate" placeholder="Select End Date">
            <span asp-validation-for="EndDate" class="text-danger"></span>
        </div>
        <div class="form-group mb-4">
            <label class="fw-bold" asp-for="@Model.CompanyName"> </label>
            <input asp-for="@Model.CompanyName" class="form-control" id="companyName" placeholder="Enter Company Name">
            <span asp-validation-for="CompanyName" class="text-danger"></span>
        </div>

        <button type="button" class="btn btn-success" id="submitForm">Create Project</button>
        <a class="btn btn-success float-end" asp-action="Index">Back to List</a>
    </form>
</div>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

@section Scripts {
    <script>
        $(document).ready(function() {

            $('#submitForm').click( function (e) {
                e.preventDefault();

                var form = $('#form');
                var formData = new FormData($('#form')[0]);

                for( var pair of formData.entries()) {
                    console.log(pair[0]+ ', '+ pair[1]);
                }

                    if (form.valid())
                    {
                        $.ajax({
                        url:'@Url.Action("Create", "Project")',
                        method:'POST',
                        data:formData,
                        processData: false,
                        contentType: false,
                        success:function(response){
                            if(response.success == true){
                                $('#response-message').html('<div class="alert alert-success">' + response.message + '</div>');
                            }
                            else{
                                $('#response-message').html('<div class="alert alert-danger">' + response.message + '</div>');
                            }
                            setTimeout(function(){
                                window.location.href = '@Url.Action("Index", "Project")';
                                }, 1000);
                        },
                        error: function(response){
                            $('#response-message').html('<div class="alert alert-danger"> An error occurred:' + response.message + '</div>');
                        }

                    });

                }

            });

        });

        function validateSize()
        {
            const maxSize = 100;
            let isValid = true;
            let messages = [];

            const files = $("#files")[0].files;

            $.each(files, function (index, file) {
                const fileSize = file.size / 1024;


                if (fileSize > maxSize) {
                    messages.push(`image "${file.name}" is too big`);
                    isValid = false;
                }
            });


            if (!isValid) {
                $("#response-message").html('<div class="alert alert-danger"> Opps! ' + messages.join("<br>") + ' Try Again' +'</div>');
                $("#files").val("");
            }

            else {
                $('#response-message').html('<div class="alert alert-success"> Hey! all files are valid..  </div>');
            }
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}
