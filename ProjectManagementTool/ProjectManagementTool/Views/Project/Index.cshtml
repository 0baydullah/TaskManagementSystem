@model IEnumerable<DataAccessLayer.Models.ViewModel.ProjectInfoVM>
@using DataAccessLayer.StaticClass
@{
    ViewData["Title"] = "Index";
    ViewData["Banner"] = "Projects";
}

@{

    var breadcrumbs = new List<KeyValuePair<string, string>>
    {
        new KeyValuePair<string, string>("","#"),
        new KeyValuePair<string, string>("Project", Url.Action(ActionNameHelper.IndexActionName, ControllerNameHelper.ProjectControllerName) ?? string.Empty),

    };
    ViewData["Breadcrumbs"] = breadcrumbs;
}





<div id="response-message">

</div>

<div class="mb-3">
    <a class="btn btn-success fw-bold" asp-action="Create"> <i class="text-light fa-solid fa-plus fw-bold"></i> Create Project</a>
</div>
<table class="table table-bordered table-striped table-hover" id="datatable">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Key
            </th>
            <th>
                Owner
            </th>
            <th>
                Description
            </th>
            <th>
                Company Name 
            </th>
            <th>
                Action
            </th>

        </tr>
    </thead>
    <tbody>
        @if( Model != null && Model.Any())
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td class="fw-bold">
                        <a class="text-decoration-none" href="/Project/Details/@item.ProjectId"> @Html.DisplayFor(modelItem => item.Name) </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Key)
                    </td>
                    <td>
                        @if (item.MemberList.ContainsKey(item.ProjectOwnerId) == false)
                        {
                            item.MemberList[item.ProjectOwnerId] = "Not Found";
                        }
                        @item.MemberList[item.ProjectOwnerId]
                        <a class="btn btn-light float-end" onclick="openUpdateOwnerModal(@item.ProjectId)">
                            <i class="text-warning fa-solid fa-pen"></i>
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CompanyName)
                    </td>
                    <td>
                        <a class="btn btn-light" asp-action="Edit" asp-route-id="@item.ProjectId"><i class="text-success fa-solid fa-pen"></i></a> |
                        <a class="btn btn-light" onclick="openDeleteModal('@item.ProjectId')"><i class="text-danger fa-solid fa-trash"></i></a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center fw-bold text-danger">No data found!</td>
            </tr>
        }
      
        
    </tbody>

</table>

<div class="modal fade" id="modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title text-black" id="exampleModalLabel">Are you sure ?</h3>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-capitalize text-danger">
                After clicking on "Ok" button it won't be undone!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">Cancel</button>
                <button type="button" onclick="confirmDelete()" class="btn btn-outline-danger">OK</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ownerModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title text-black" id="exampleModalLabel">Change Project Owner</h3>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateOwnerForm">
                    <!-- Hidden input to store the projectId -->
                    <input type="hidden" id="projectIdToUpdate" />
                    <div class="mb-3">
                        <label for="newOwner" class="form-label">Select New Owner</label>
                        <select class="form-select" id="newOwner" name="newOwner">
                            <!-- Options will be dynamically populated -->
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer d-flex justify-content-between">
                <a class="btn btn-success" data-bs-dismiss="modal">Cancel</a>
                <a class="btn btn-danger" onclick="updateOwner()">Change Owner</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var projectData = @Html.Raw(Json.Serialize(Model));

        $(document).ready(function () {
            $("#datatable").DataTable({});
            $("th").css("background-color", "aliceblue");
        });

        let projectIdToDelete = 0;
        let ownerIdToUpdate = 0;
        let projectIdToUpdate = 0;

        function openDeleteModal(id) {
            projectIdToDelete = id;
            $("#modal").modal('show');
        }

        function openUpdateOwnerModal(projectId) {
            $("#projectIdToUpdate").val(projectId);
            $("#newOwner").empty();

            var selectedProject = projectData.find(p => p.projectId == projectId);

            if (selectedProject && selectedProject.memberList) {
                Object.keys(selectedProject.memberList).forEach(memberId => {
                    var memberName = selectedProject.memberList[memberId];
                    $("#newOwner").append(`<option value="${memberId}">${memberName}</option>`);
                });
            }

            $("#ownerModal").modal('show');
        }

        function confirmDelete() {
            $.ajax({
                url: `/Project/Delete/${projectIdToDelete}`,
                type: 'POST',
                success: function (response) {
                    if (response.success == true) {
                        $('#response-message').html('<div class="alert alert-success">' + response.message + '</div>');
                    } else {
                        $('#response-message').html('<div class="alert alert-danger">' + response.message + '</div>');
                    }
                    $("#ownerModal").modal('hide');
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                },
                error: function (response) {
                    $('#response-message').html('<div class="alert alert-danger">' + response.message + '</div>');
                }
            });
        }

        function updateOwner() {
            var newOwner = $("#newOwner").val();
            var projectId = $("#projectIdToUpdate").val();

            $.ajax({
                url: '@Url.Action("UpdateOwner", "Project")',
                type: 'POST',
                data: {
                    ownerId: newOwner,
                    projectId: projectId
                },
                success: function (response) {
                    if (response.success == true) {
                        $('#response-message').html('<div class="alert alert-success">' + response.message + '</div>');
                    } else {
                        $('#response-message').html('<div class="alert alert-danger">' + response.message + '</div>');
                    }
                    $("#ownerModal").modal('hide');
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                },
                error: function (xhr, status, error) {
                    $('#response-message').html('<div class="alert alert-danger">An error occurred while processing your request.</div>');
                }
            });
        }
    </script>
}