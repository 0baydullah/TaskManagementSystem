@model DataAccessLayer.Models.ViewModel.TodoTaskVM
@{
    ViewData["Title"] = "MyTasks";
    ViewData["Banner"] = "My Tasks & Sub Tasks";
    Model.PriorityList[0] = "N/A"; 
}


<div id="response-message">
</div>

<div>
    <table class="table table-bordered table-striped table-hover">
        <thead>
            <tr>
                <th>Tasks & Sub Tasks</th>
                <th>Estimated Time</th>
                <th>Priority</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            <!-- Tasks -->
            @foreach (var item in Model.Tasks)
            {
                @if (!Model.PriorityList.ContainsKey(item.Priority))
                {
                    Model.PriorityList[item.Priority] = "Not Found";
                }
                @if (!Model.StatusList.ContainsKey(item.Status))
                {
                    Model.StatusList[item.Status] = "Not Found";
                }
                var priority = Model.PriorityList[item.Priority].Split('+');
                var pName = priority[0];
                var pColor = priority[1];


                <tr>
                    <td class="fw-bold text-success">
                        <div class="d-flex justify-content-between">
                            @item.Name
                            <div class="btn btn-warning fw-bold btn-sm px-2 rounded-pill" style="font-size:10px;">Task</div>
                        </div>
                    </td>
                    <td>@item.EstimatedTime Hour</td>
                    <td>
                        <span class="btn btn-light fw-bold btn-sm px-2 rounded-pill" style="font-size:10px;background-color:@pColor;">
                            @pName
                        </span>
                    </td>
                    <td>
                        <select class="btn btn-sm btn-light dropdown-toggle"
                                data-bs-toggle="dropdown"
                                aria-expanded="false"
                                style="background-color: lightblue"
                                onchange="editTask(this, '@item.TaskId')">
                            @foreach (var status in Model.StatusList)
                            {
                                if (status.Key == item.Status)
                                {
                                    <option value="@status.Key" selected>@status.Value</option>
                                }
                                else
                                {
                                    <option value="@status.Key">@status.Value</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
            }

            <!-- Subtasks -->
            @foreach (var item in Model.SubTasks)
            {
                @if (!Model.PriorityList.ContainsKey(item.Priority))
                {
                    Model.PriorityList[item.Priority] = "Not Found";
                }
                @if (!Model.StatusList.ContainsKey(item.Status))
                {
                    Model.StatusList[item.Status] = "Not Found";
                }


                var priority = Model.PriorityList[item.Priority].Split('+');
                var pName = priority[0];
                var pColor = priority[1];


                <tr>
                    <td class="fw-bold text-success">
                        <div class="d-flex justify-content-between">
                            @item.Name
                            <div class="btn btn-warning fw-bold btn-sm px-2 rounded-pill" style="font-size:10px;">SubTask</div>
                        </div>
                    </td>
                    <td>@item.EstimatedTime Hour</td>
                    <td>
                        <span class="btn btn-light fw-bold btn-sm px-2 rounded-pill" style="font-size:10px;background-color:@pColor;">
                            @pName
                        </span>
                    </td>
                    <td>
                        <select class="btn btn-sm btn-light dropdown-toggle"
                                data-bs-toggle="dropdown"
                                aria-expanded="false"
                                style="background-color: lightblue"
                                onchange="editSubTask(this, '@item.SubTaskId')">
                            @foreach (var status in Model.StatusList)
                            {
                                if (status.Key == item.Status)
                                {
                                    <option value="@status.Key" selected>@status.Value</option>
                                }
                                else
                                {
                                    <option value="@status.Key">@status.Value</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {

    <script>
        function editTask(selectElement, taskId) {
            var selectedStatus = selectElement.value;

            $.ajax({
                url: '/Tasks/ChangeStatus',
                type: 'POST',
                data: {
                    id: taskId,
                    status: selectedStatus,
                },
                success: function (response) {
                    if(response.success) {
                        $('#response-message').html('<div class="alert alert-success"><b>Success!!</b> Status Updated Successfully!</div>');
                        setTimeout(() => {
                            window.location.reload();
                        }, 500);
                    }

                    else {
                       $('#response-message').html('<div class="alert alert-danger">' + response.message + '</div>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('AJAX error: ' + error);
                    alert('An error occurred while updating the task status.');
                }
            });
        }

        function editSubTask(selectElement, subTaskId) {
            var selectedStatus = selectElement.value;

            $.ajax({
                url: '/SubTask/ChangeStatus',
                type: 'POST',
                data: {
                    id : subTaskId,
                    status : selectedStatus,
                },
                success: function (response) {
                    if(response.success) {
                        $('#response-message').html('<div class="alert alert-success"><b>Success!!</b> Status Updated Successfully!</div>');
                        setTimeout(() => {
                            window.location.reload();
                        }, 500);
                    }

                    else {
                       $('#response-message').html('<div class="alert alert-danger">' + response.message + '</div>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('AJAX error: ' + error);
                    alert('An error occurred while updating the subtask status.');
                }
            });
        }
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}