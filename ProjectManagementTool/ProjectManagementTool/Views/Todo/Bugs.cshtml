@model DataAccessLayer.Models.ViewModel.TodoBugVM
@{
    ViewData["Title"] = "MyBugs";
    ViewData["Banner"] = "My Bugs";
    Model.PriorityList[0] = "N/A"; 
}


<div id="response-message">
</div>

<div>
    <table class="table table-bordered table-striped table-hover" id="bugTable">
        <thead>
            <tr>
                <th class="text-center">Bug</th>
                <th class="text-center">Status</th>
            </tr>
        </thead>
        <tbody>
            <!-- Bugs -->
            @foreach (var item in Model.Bug)
            {
                @if (!Model.PriorityList.ContainsKey(item.Priority))
                {
                    Model.PriorityList[item.Priority] = "Not Found";
                }
                @if (!Model.StatusList.ContainsKey(item.Status))
                {
                    Model.StatusList[item.Status] = "Not Found";
                }


                var priority = Model.PriorityList[item.Priority].Split('+');
                var pName = priority[0];
                var pColor = priority[1];

                var stat = Model.StatusList[item.Status].Split('+');
                var sName = stat[0];
                var sColor = stat[1];


                

                <tr>
                    <td class="fw-bold text-success">
                        <div class="d-flex justify-content-between">
                            @item.Name
                            <div class=" btn-warning fw-bold btn-sm px-2 rounded-pill" style="font-size:10px; background-color:@pColor;">@pName</div>
                        </div>
                    </td>
                    <td class="text-center">
                        <select class="btn btn-sm btn-light dropdown-toggle"
                                data-bs-toggle="dropdown"
                                aria-expanded="false"
                                style="background-color: @sColor"
                                onchange="editBug(this, '@item.BugId')">
                            @foreach (var status in Model.StatusList)
                            {
                                var st = status.Value.Split('+');
                                sName = st[0];
                                sColor = st[1];

                                if (status.Key == item.Status)
                                {
                                    <option style="background-color:@sColor" value="@status.Key" selected>@sName</option>
                                }
                                else
                                {
                                    <option style="background-color:@sColor" value="@status.Key">@sName</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $("#taskTable").DataTable({});
        });

        function editBug(selectElement, bugId) {
            var selectedStatus = selectElement.value;

            $.ajax({
                url: '/Bug/ChangeStatus',
                type: 'POST',
                data: {
                    id: bugId,
                    status: selectedStatus,
                },
                success: function (response) {
                    if(response.success) {
                        $('#response-message').html('<div class="alert alert-success"><b>Success!!</b> Status Updated Successfully!</div>');
                        setTimeout(() => {
                            window.location.reload();
                        }, 500);
                    }

                    else {
                       $('#response-message').html('<div class="alert alert-danger">' + response.message + '</div>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('AJAX error: ' + error);
                    alert('An error occurred while updating the task status.');
                }
            });
        }

    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}