@model DataAccessLayer.Models.ViewModel.UserStoryDetailsVM

@{
    ViewData["Title"] = "User Story Details";
}
<div class="d-flex justify-content-between">
	<h3 class="text-center">User Story : @Model.Story.StoryName</h3>
    <div>
        <a class="btn btn-light" asp-controller="UserStory" asp-action="Edit" asp-route-id="@Model.Story.StoryId">
            <i class="text-success fa-solid fa-pen"> Edit</i>
        </a>
        <a class="btn btn-light" onclick="openDeleteModal('@Model.Story.StoryId')">
            <i class="text-danger fa-solid fa-trash"> Delete</i>
        </a>
    </div>
</div>

<hr />

<div>
	@Model.Story.Description 
    <hr />
</div>
<div>
    <table>
        <tbody>
            <tr>
                <td>Points :</td>
                <th><i>@Model.Story.Points</i></th>
            </tr>
            <tr>
                <td>Status :</td>
                <th><i>@Model.Story.Status</i></th>
            </tr>
            <tr>
                <td>Priority :</td>
                <th><i>@Model.Story.Priority</i></th>
            </tr>
            <tr>
                <td>Estimated Time :  </td>
                <th><i>@Model.Story.EstimateTime hr.</i></th>
            </tr>
            <tr>
                <td>Category :</td>
                <th><i>@Model.Story.Category</i></th>
            </tr>
            <tr>
                <td>Sprint :</td>
                <th><i>@Model.Story.SprintId</i></th>
            </tr>
        </tbody>
    </table>
    <hr />
</div>
<div class="d-flex justify-content-between">
    <h3>Tasks</h3>
    <a class="btn btn-success w-25" asp-controller="Tasks" asp-action="Create" asp-route-id="@Model.Story.StoryId">
        <i class="text-light fa-solid fa-plus"></i> Task
    </a>
</div>
<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Task
                </th>
                <th>
                    Status
                </th>
                <th>
                    Estimated Time
				</th>
				<th>
					Priority
				</th>
                <th>
                    Assignee
                </th>
                <th>
                    Reviewer
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Tasks)
            {
                <tr>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.Status
                    </td>
                    <td>
                        @item.EstimatedTime
                    </td>
                    <td>
                        @item.Priority
                    </td>
                    <td>
                        @item.AssignMembersId
                    </td>
                    <td>
                        @item.ReviewerMemberId
                    </td>
                    <td>

                        <a class="btn btn-light" asp-controller="Tasks" asp-action="Edit" asp-route-id="@item.TaskId">
                            <i class="text-success fa-solid fa-pen"></i>
                        </a>
                        <a class="btn btn-light" onclick="openDeleteModal(@item.TaskId)">
                            <i class="text-success fa-solid fa-trash"></i>
                        </a>
                        <a class="btn btn-light" asp-controller="Tasks" asp-action="Details" asp-route-id="@item.TaskId">
                            <i class="text-success fa-solid fa-circle-info"></i>
                        </a>
                        <a class="btn btn-light" asp-controller="SubTask" asp-action="Create" asp-route-id="@item.TaskId">
                            <i class="text-success fa-solid fa-plus"></i> <small>Sub Task</small>
                        </a>
                        <a id="playButton-@item.TaskId" class="btn btn-light" onclick="startTracking(@item.TaskId)">
                            <i class="text-success fa-solid fa-circle-play"></i>
                        </a>
                        <a id="pauseButton-@item.TaskId" class="btn btn-light d-none" onclick="stopTracking(@item.TaskId)">
                            <i class="text-success fa-solid fa-circle-pause"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
<hr />
</div>


<!-- Delete Modal -->
<div class="modal fade" id="modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title text-black" id="exampleModalLabel">Delete Task !!</h3>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-capitalize text-danger">
                After clicking on "Delete" button it won't be undone!!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">Cancel</button>
                <button type="button" onclick="confirmDelete()" class="btn btn-outline-danger">OK</button>
            </div>
        </div>
    </div>
</div>

<div class="d-flex justify-content-between">
    <h3>Bugs</h3>
    <a class="btn btn-danger w-25" asp-controller="Bug" asp-action="Create" asp-route-id="@Model.Story.StoryId">
        <i class="text-light fa-solid fa-plus"></i> Bug
    </a>
</div>
<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Bug
                </th>
                <th>
                    Status
                </th>
                <th>
                    Estimated Time
                </th>
                <th>
                    Priority
                </th>
                <th>
                    Assignee
                </th>
                <th>
                    Reviewer
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Tasks)
            {
                <tr>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.Status
                    </td>
                    <td>
                        @item.EstimatedTime
                    </td>
                    <td>
                        @item.Priority
                    </td>
                    <td>
                        @item.AssignMembersId
                    </td>
                    <td>
                        @item.ReviewerMemberId
                    </td>
                    <td>

                        <a class="btn btn-light" asp-controller="Tasks" asp-action="Edit" asp-route-id="@item.TaskId">
                            <i class="text-danger fa-solid fa-pen"></i>
                        </a>
                        <a class="btn btn-light" onclick="openDeleteModal(@item.TaskId)">
                            <i class="text-danger fa-solid fa-trash"></i>
                        </a>
                        <a class="btn btn-light" asp-controller="Tasks" asp-action="Details" asp-route-id="@item.TaskId">
                            <i class="text-danger fa-solid fa-circle-info"></i>
                        </a>
                        <a class="btn btn-light" asp-controller="SubTasks" asp-action="Create" asp-route-id="@item.TaskId">
                            <i class="text-danger fa-solid fa-check"></i> <small>Resolved</small>
                        </a>

                    </td>
                </tr>
            }
        </tbody>
    </table>
    <hr />
</div>



@section Scripts {
    <script>
        
        var deleteTaskId = null;

        function openDeleteModal(taskId) {
            deleteTaskId = taskId;
            $('#modal').modal('show');
        }


        function confirmDelete() {
            if (deleteTaskId) {
                $.ajax({
                    url: '/Tasks/Delete/' + deleteTaskId,
                    type: 'POST',
                    success: function (response) {
                        $('#modal').modal('hide');
                        location.reload();
                    },
                    error: function () {
                        alert('Error deleting sub task.');
                    }
                });
            }
        }

        // Time track starting
        function startTracking(taskId) {
            $.ajax({
                url: "/TimeTrack/Start",
                type: 'POST',
                data: { taskId: taskId, subTaskId: 0 },
                success: function (response) {
                    $("#playButton-" + taskId).addClass("d-none");
                    $("#pauseButton-" + taskId).removeClass("d-none");
                },
                error: function () {
                    alert("Error starting tracking for Task ID: " + taskId + ", SubTask ID: " + subTaskId);

                }
            });
        }

        // Time track stopping
        function stopTracking(taskId) {
            $.ajax({
                url: "/TimeTrack/End",
                type: 'POST',
                data: { taskId: taskId, subTaskId: 0 },
                success: function (response) {
                    $("#pauseButton-" + taskId).addClass("d-none");
                    $("#playButton-" + taskId).removeClass("d-none");
                },
                error: function () {
                    alert("Error stopping tracking for Task ID: " + taskId + ", SubTask ID: " + subTaskId);
                }
            });
        }

    </script>
}

