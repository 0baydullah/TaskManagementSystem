@using DataAccessLayer.Models.ViewModel
@model UserStoryListVM
@using DataAccessLayer.StaticClass

@{
    ViewData["Title"] = "User Story";
    ViewData["Banner"] = "User Stories";
}


@{ // use this block for BREADCRUMBS
    var breadcrumbs = new List<KeyValuePair<string, string>>
    {
        new KeyValuePair<string, string>("Project", Url.Action(ActionNameHelper.IndexActionName, ControllerNameHelper.ProjectControllerName) ?? string.Empty),
        new KeyValuePair<string, string>("Dashboard", Url.Action(ActionNameHelper.DetailsActionName, ControllerNameHelper.ProjectControllerName,new{id = ProjectKey.GetProjectId()})?? string.Empty),
        new KeyValuePair<string, string>("User Stories", Url.Action(ActionNameHelper.IndexActionName, ControllerNameHelper.UserStoryControllerName,new{projectId = ProjectKey.GetProjectId()})?? string.Empty),
    };
    ViewData["Breadcrumbs"] = breadcrumbs;
}





@if (TempData["error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show " role="alert" id="error">
        <strong>Error!</strong> @TempData["error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
else
{


    <div class="mb-3">
        <a href="@Url.Action("Create", "UserStory", new { projectId = ViewBag.ProjectId })" class="btn btn-success"><i class="text-light fa-solid fa-plus"></i> User Story</a>
        <a class="btn shadow-sm text-success fw-bold float-end mx-3" style="background-color:aliceblue;" href="#">Filter</a>
    </div>

    <table class="table table-bordered table-striped table-hover">
        <thead>
            <tr>
                <th>
                    Story Name
                </th>
                <th>
                    Status
                </th>
                <th>
                    Points
                </th>
                <th>
                    Category
                </th>
                <th>
                    Priority
                </th>
                <th class="text-center">
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.UserStories)
            { @if (Model.StatusList.ContainsKey(item.Status) == false)
                {
                    Model.StatusList[item.Status] = "Not Found";
                }
                @if (Model.PriorityList.ContainsKey(item.Priority) == false)
                {
                    Model.StatusList[item.Priority] = "Not Found";
                }
                @if (Model.CategoryList.ContainsKey(item.Category) == false)
                {
                    Model.CategoryList[item.Category] = "Not Found";
                }
                <tr>
                    <td>
                        @item.StoryName
                    </td>
                    @*    <td>
                   @item.ProjectId
                </td> *@
                    <td>
                        @Model.StatusList[item.Status]
                    </td>
                    <td>
                        @item.Points
                    </td>
                    <td>
                        @Model.CategoryList[item.Category]
                    </td>
                    <td>
                        @Model.PriorityList[item.Priority]
                    </td>
                    <td class="text-center">

                        <a class="btn btn-light" asp-action="Edit" asp-route-id="@item.StoryId">
                            <i class="text-danger fa-solid fa-pen"></i>
                        </a>
                        <a class="btn btn-light" onclick="openDeleteModal('@item.StoryId')">
                            <i class="text-danger fa-solid fa-trash"></i>
                        </a>
                        <a class="btn btn-light" asp-action="Details" asp-route-id="@item.StoryId">
                            <i class="text-danger fa-solid fa-circle-info"></i>
                        </a>
                        <a class="btn btn-light" asp-controller="Tasks" asp-action="Create" asp-route-id="@item.StoryId">
                            <i class="text-success fa-solid fa-plus"></i> <small>Task</small>
                        </a>
                        <a class="btn btn-light" asp-controller="Bug" asp-action="Create" asp-route-id="@item.StoryId">
                            <i class="text-danger fa-solid fa-plus"></i> <small>Bug</small>
                        </a>

                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="modal fade" id="modal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title text-black" id="exampleModalLabel">Delete User Story !!</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-capitalize text-danger">
                    You are deleting a User Story....after clicking on "Delete" button it wont be undone.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" onclick="confirmDelete()" class="btn btn-outline-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>


    @section Scripts {
    <script>
        let userStoryIdToDelete = 0;

        function openDeleteModal(id) {
            userStoryIdToDelete = id;
            $("#modal").modal('show');
        }

        function confirmDelete() {
            $.ajax({
                url: '/UserStory/Delete/' + userStoryIdToDelete,
                type: 'POST',
                success: function (result) {
                    $("#modal").modal('hide');
                    location.reload();
                    console.log(result);
                },
                error: function (err) {
                    alert('Error deleting user story' + err);
                }
            });
        }
    </script>
    }


}
